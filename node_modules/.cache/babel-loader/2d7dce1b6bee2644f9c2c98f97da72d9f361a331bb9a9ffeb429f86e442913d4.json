{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Downloads\\\\SEM - 4\\\\Placements\\\\Kaiburr\\\\Task - 4\\\\spring-boot-react-ui\\\\src\\\\components\\\\ListServers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getAllServers } from './serverService'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListServers = () => {\n  _s();\n  const [servers, setServers] = useState([]);\n  useEffect(() => {\n    // Use the service function to fetch data\n    getAllServers().then(data => {\n      setServers(data); // Update the component's state with the fetched data\n    }).catch(error => {\n      console.error('Error fetching servers:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Servers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: servers.map(server => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: server.name\n      }, server.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ListServers, \"xfSG+wryFcgzvchjWZabd3QMWJw=\");\n_c = ListServers;\nexport default ListServers;\nvar _c;\n$RefreshReg$(_c, \"ListServers\");","map":{"version":3,"names":["React","useState","useEffect","axios","getAllServers","jsxDEV","_jsxDEV","ListServers","_s","servers","setServers","then","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","server","name","id","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Downloads/SEM - 4/Placements/Kaiburr/Task - 4/spring-boot-react-ui/src/components/ListServers.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getAllServers } from './serverService'; // Adjust the path as needed\r\n\r\n\r\nconst ListServers = () => {\r\n  const [servers, setServers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Use the service function to fetch data\r\n    getAllServers()\r\n      .then((data) => {\r\n        setServers(data); // Update the component's state with the fetched data\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching servers:', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>List of Servers</h2>\r\n      <ul>\r\n        {servers.map((server) => (\r\n          <li key={server.id}>\r\n            {server.name}\r\n            {/* You can display other server details here */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListServers;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGjD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACAE,aAAa,CAAC,CAAC,CACZO,IAAI,CAAEC,IAAI,IAAK;MACdF,UAAU,CAACE,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBd,OAAA;MAAAU,QAAA,EACGP,OAAO,CAACY,GAAG,CAAEC,MAAM,iBAClBhB,OAAA;QAAAU,QAAA,EACGM,MAAM,CAACC;MAAI,GADLD,MAAM,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACZ,EAAA,CA3BID,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AA6BjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}